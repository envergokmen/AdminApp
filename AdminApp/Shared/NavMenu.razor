@inject HttpClient Http
@inject StateContainer state
@using Newtonsoft.Json
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">AdminApp</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>



<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        @foreach (var item in state.MenuItems)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@item.LinkTo" ActiveClass="selected">
                    <i class="fa fa-@item.icon" aria-hidden="true"></i> @item.Name
                </NavLink>
                @if(item.SubItems!=null)
                {
                    @foreach (var subitem in item.SubItems)
                    {
                           <NavLink class="subitem nav-link" href="@subitem.LinkTo" ActiveClass="selected">
                                <i class="fa fa-@subitem.icon" aria-hidden="true"></i> @subitem.Name
                           </NavLink>
                    }
                }
            </li>
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    protected override async Task OnInitializedAsync()
    {
       state.OnChange += StateHasChanged;

      var lang = ((await localStorage.GetItemAsync<string>("lang")) ?? state.lang);
      var langItems = await Http.GetStringAsync($"/ModelData/i18n/{lang}.json");
      state.LangItems  = JsonConvert.DeserializeObject<Dictionary<string,string>>(langItems);
      state.MenuItems = await Http.GetFromJsonAsync<List<MenuItem>>($"/ModelData/menu/{lang}.json");

    }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
