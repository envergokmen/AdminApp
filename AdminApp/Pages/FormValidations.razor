@page "/formelements/validations"

@inject HttpClient Http
@inject StateContainer state
@using Newtonsoft.Json
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Blazored.SessionStorage.ISessionStorageService  sessionStorage
@using System.Globalization
@using Microsoft.Extensions.Localization

@inject IStringLocalizer<Lng.App> LocGen


<div class="container">

    <div class="py-5 text-center">
        <h2>@state.Localized("FormValidations")</h2>
    </div>

    @Lng.App.Required<br />
    @Lng.App.TooLong<br /><br />
    @System.Threading.Thread.CurrentThread.CurrentCulture.ToString()<br />
    <br />

    @curLang<br />
    @(curLang.ToLower() == "tr" ? "tr-TR" : "en-US")
    <br />
    @LocGen["Required"]
    @Lng.App.Required

    <hr />

    <EditForm Model="@people" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <InputText id="name" @bind-Value="people.Name" />

        <button type="submit">Submit</button>
    </EditForm>

</div>

@code {
    private int currentCount = 0;
    private People people = new People();
    public string curLang = "";

    private void HandleValidSubmit()
    {


    }

    protected override async Task OnInitializedAsync()
    {

        state.OnChange += StateHasChanged;
        var lang = ((await localStorage.GetItemAsync<string>("lang")) ?? state.lang);
        curLang = lang;



    }

    private void IncrementCount()
    {
        currentCount++;
    }
}
